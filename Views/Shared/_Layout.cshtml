<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - StrongHelpOfficial</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/StrongHelpOfficial.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    @RenderSection("Styles", required: false)
    <style>
        :root {
            --primary-color: #4355db;
            --primary-dark: #3243c0;
            --primary-light: #eef2ff;
            --sidebar-width: 270px;
            --sidebar-collapsed-width: 70px;
            --sidebar-transition: all 0.3s ease;
        }

        body {
            overflow-x: hidden;
            background-color: #f8f9fa;
        }

        #wrapper {
            display: flex;
            width: 100%;
        }

        #sidebar-wrapper {
            min-height: 100vh;
            width: var(--sidebar-width);
            background: var(--primary-dark);
            color: white;
            transition: var(--sidebar-transition);
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
            position: fixed;
            top: 0;
            left: 0;
            z-index: 999;
        }

            #sidebar-wrapper.collapsed {
                width: var(--sidebar-collapsed-width);
            }

            #sidebar-wrapper .sidebar-heading {
                padding: 1.25rem 1rem;
                font-size: 1.5rem;
                font-weight: 600;
                display: flex;
                align-items: center;
                color: white;
                white-space: nowrap;
                overflow: hidden;
            }

                #sidebar-wrapper .sidebar-heading img {
                    margin-right: 15px;
                }

        .sidebar-menu {
            padding: 0.5rem 0;
        }

            .sidebar-menu .nav-link {
                padding: 0.8rem 1.25rem;
                color: rgba(255, 255, 255, 0.8);
                font-weight: 500;
                display: flex;
                align-items: center;
                white-space: nowrap;
                overflow: hidden;
                transition: color 0.15s ease-in-out;
            }

                .sidebar-menu .nav-link:hover {
                    color: white;
                    background-color: rgba(255, 255, 255, 0.1);
                }

                .sidebar-menu .nav-link.active {
                    color: white;
                    background-color: rgba(255, 255, 255, 0.2);
                    border-left: 4px solid white;
                }

                .sidebar-menu .nav-link i {
                    margin-right: 15px;
                    font-size: 1.2rem;
                    width: 20px;
                    text-align: center;
                }

                .sidebar-menu .nav-link span {
                    transition: opacity 0.2s;
                }

        #sidebar-wrapper.collapsed .sidebar-menu .nav-link span {
            opacity: 0;
        }

        #sidebar-wrapper.collapsed #user-info-section {
            display: none;
        }

        #sidebar-wrapper.collapsed .sidebar-heading span {
            opacity: 0;
        }

        #sidebar-toggle {
            background: var(--primary-color);
            color: white;
            border: none;
            border-radius: 0.25rem;
            padding: 0.5rem;
            position: absolute;
            top: 1rem;
            right: -15px;
            z-index: 1000;
            width: 30px;
            height: 30px;
            display: flex;
            justify-content: center;
            align-items: center;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.15);
        }

            #sidebar-toggle:hover {
                background-color: var(--primary-dark);
            }

        #content-wrapper {
            width: calc(100% - var(--sidebar-width));
            transition: var(--sidebar-transition);
            margin-left: var(--sidebar-width);
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        .sidebar-collapsed #content-wrapper {
            width: calc(100% - var(--sidebar-collapsed-width));
            margin-left: var(--sidebar-collapsed-width);
        }

        #user-info-section {
            padding: 1rem;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            margin-bottom: 1rem;
            transition: var(--sidebar-transition);
        }

        .user-info {
            overflow: hidden;
            white-space: nowrap;
        }

            .user-info h6 {
                margin: 0;
                color: white;
            }

            .user-info small {
                color: rgba(255, 255, 255, 0.7);
            }

        .main-content {
            flex: 1;
            padding: 0 1.5rem 1rem 1.5rem;
        }

        footer {
            background-color: white;
            padding: 1rem 0;
            box-shadow: 0 -0.125rem 0.25rem rgba(0, 0, 0, 0.05);
        }

        .topbar {
            background: white;
            padding: 20px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            position: sticky;
            top: 0;
            z-index: 100;
            margin: 1rem 0 30px 0;
            border-radius: 12px;
            width: 100%;
        }

        .topbar-title {
            font-size: 1.5rem;
            font-weight: 600;
            color: #333;
        }

        .topbar-actions {
            display: flex;
            align-items: center;
            gap: 20px;
        }

        .notification {
            position: relative;
            cursor: pointer;
            padding: 8px;
            border-radius: 8px;
            transition: background-color 0.2s;
        }

            .notification:hover {
                background-color: #f8f9fa;
            }

            .notification i {
                font-size: 1.2rem;
                color: #6c757d;
            }

        .notification-bell-wrapper {
            position: relative;
            display: inline-block;
        }

        .notification-dot {
            position: absolute;
            top: 0;
            right: 0;
            width: 8px;
            height: 8px;
            background-color: #dc3545;
            border-radius: 50%;
            border: 2px solid white;
        }

        .user-avatar {
            display: flex;
            align-items: center;
            gap: 16px;
        }


        .avatar-circle {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: var(--primary-color);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 600;
            font-size: 14px;
        }

        .user-name {
            font-weight: 500;
            color: #333;
            margin-left: 12px;
        }

        /* Responsive */
        @@media (max-width: 768px) {
            #sidebar-wrapper {
                margin-left: calc(var(--sidebar-width) * -1);
            }

                #sidebar-wrapper.collapsed {
                    margin-left: 0;
                    width: var(--sidebar-width);
                }

            #content-wrapper {
                width: 100%;
                margin-left: 0;
            }

            .sidebar-collapsed #content-wrapper {
                width: 100%;
                margin-left: 0;
            }

            #sidebar-toggle {
                right: -45px;
            }

            .topbar {
                margin: 0.5rem 0 20px 0;
                padding: 15px 20px;
            }

            .topbar-title {
                font-size: 1.25rem;
            }

            .topbar-actions {
                gap: 15px;
            }

            .user-name {
                display: none;
            }
        }

        @@media (max-width: 480px) {
            .topbar-actions

        {
            gap: 10px;
        }

        .topbar {
            padding: 12px 15px;
        }

        .main-content {
            padding: 0 1rem 1rem 1rem;
        }

        }
    </style>
</head>
<body>
    @if (string.IsNullOrEmpty(Context.Session.GetString("RoleName")) ||
    !(new[] { "Employee", "Benefits Assistant", "Approver" }.Contains(Context.Session.GetString("RoleName"))))
    {
        <header>
            <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
                <div class="container-fluid">
                    <a class="navbar-brand d-flex align-items-center" asp-area="" asp-controller="Home" asp-action="Index">
                        <img src="~/images/shield-logo.svg" alt="Shield Logo" width="32" height="38" class="me-2" style="vertical-align:middle;" />
                        Strong Help
                    </a>
                    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse"
                            aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                        <ul class="navbar-nav flex-grow-1">
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Auth" asp-action="Login">Login</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </nav>
        </header>
        <div class="container">
            <main role="main" class="pb-3">
                @RenderBody()
            </main>
        </div>
    }
    else
    {
        string roleName = Context.Session.GetString("RoleName")!;
        string email = Context.Session.GetString("Email") ?? "user@example.com";

        <div id="wrapper">
            <div id="sidebar-wrapper">
                <button id="sidebar-toggle" type="button">
                    <i class="bi bi-chevron-left"></i>
                </button>
                <div class="sidebar-heading">
                    <img src="~/images/shield-logo.svg" alt="Shield Logo" width="32" height="38" />
                    <span>Strong Help</span>
                </div>
                <div id="user-info-section">
                    <div class="user-info">
                        <h6>Welcome</h6>
                        <small>@email</small>
                    </div>
                </div>
                <nav class="sidebar-menu">
                    @if (roleName == "Employee")
                    {
                        <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "LoanerDashboard" &&
                         ViewContext.RouteData.Values["Action"]?.ToString() == "Index" ? "active" : "")"
                           href="@Url.Action("Index", "LoanerDashboard", new { area = "Loaner" })">
                            <i class="bi bi-speedometer2"></i>
                            <span>Dashboard</span>
                        </a>
                        <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "ApplyForLoan" &&
                         ViewContext.RouteData.Values["Action"]?.ToString() == "Index" ? "active" : "")"
                           href="@Url.Action("Index", "ApplyForLoan", new { area = "Loaner" })">
                            <i class="bi bi-file-earmark-text"></i>
                            <span>Apply For Loan</span>
                        </a>
                        <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "MyApplication" &&
                         ViewContext.RouteData.Values["Action"]?.ToString() == "Index" ? "active" : "")"
                           href="@Url.Action("Index", "MyApplication", new { area = "Loaner" })">
                            <i class="bi bi-card-checklist"></i>
                            <span>My Applications</span>
                        </a>
                        <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "LoanerLoanHistory" &&
                         ViewContext.RouteData.Values["Action"]?.ToString() == "Index" ? "active" : "")"
                           href="@Url.Action("Index", "LoanerLoanHistory", new { area = "Loaner" })">
                            <i class="bi bi-clock-history"></i>
                            <span>Loan History</span>
                        </a>
                    }

                    else if (roleName == "Benefits Assistant")
                    {
                        <a class="nav-link @(ViewContext.RouteData.Values["Action"]?.ToString() == "Index" ? "active" : "")"
                           href="/BenefitsAssistant/BenefitsAssistantDashboard/Index">
                            <i class="bi bi-speedometer2"></i>
                            <span>Dashboard</span>
                        </a>
                        <a class="nav-link @(ViewContext.RouteData.Values["Action"]?.ToString() == "Applications" ? "active" : "")"
                           href="/BenefitsAssistant/Applications">
                            <i class="bi bi-file-earmark-text"></i>
                            <span>Applications</span>
                        </a>
                        <a class="nav-link @(ViewContext.RouteData.Values["Action"]?.ToString() == "Reports" ? "active" : "")"
                           href="/BenefitsAssistant/Reports">
                            <i class="bi bi-bar-chart"></i>
                            <span>Reports</span>
                        </a>
                        <a class="nav-link @(ViewContext.RouteData.Values["Action"]?.ToString() == "Logs" ? "active" : "")"
                           href="/BenefitsAssistant/Logs">
                            <i class="bi bi-journal-text"></i>
                            <span>Logs</span>
                        </a>
                        <a class="nav-link @(ViewContext.RouteData.Values["Action"]?.ToString() == "LoanInformation" ? "active" : "")"
                           href="/BenefitsAssistant/LoanInformation">
                            <i class="bi bi-info-circle"></i>
                            <span>Loan Information</span>
                        </a>
                    }

                    else
                    {
                        <a class="nav-link @(ViewContext.RouteData.Values["Action"]?.ToString() == "Index" ? "active" : "")"
                           href="/Approver/ApproverDashboard/Index">
                            <i class="bi bi-speedometer2"></i>
                            <span>Dashboard</span>
                        </a>
                        <a class="nav-link @(ViewContext.RouteData.Values["Action"]?.ToString() == "Applications" ? "active" : "")"
                           href="/Approver/Applications">
                            <i class="bi bi-file-earmark-text"></i>
                            <span>Applications</span>
                        </a>
                        <a class="nav-link @(ViewContext.RouteData.Values["Action"]?.ToString() == "Logs" ? "active" : "")"
                           href="/Approver/Logs">
                            <i class="bi bi-journal-text"></i>
                            <span>Logs</span>
                        </a>
                    }
                    <div class="mt-auto pt-3">
                        <a class="nav-link" href="/LoanerDashboard/Logout?returnUrl=/">
                            <i class="bi bi-box-arrow-right"></i>
                            <span>Logout</span>
                        </a>

                    </div>
                </nav>
            </div>

            <div id="content-wrapper">
                <div class="main-content">
                    <!-- Topbar Start -->
                    <header class="topbar">
                        <div class="topbar-title">
                            <span>@ViewData["Title"]</span>
                        </div>
                        <div class="topbar-actions">
                            <div class="notification">
                                <span class="notification-bell-wrapper">
                                    <i class="bi bi-bell"></i>
                                    <span class="notification-dot"></span>
                                </span>
                            </div>

                            <div class="user-avatar">
                                @{
                                    var firstName = Context.Session.GetString("FirstName") ?? "";
                                    var lastName = Context.Session.GetString("LastName") ?? "";
                                    string initials;
                                    string displayName;

                                    if (!string.IsNullOrWhiteSpace(firstName) || !string.IsNullOrWhiteSpace(lastName))
                                    {
                                        initials = (firstName.Length > 0 ? firstName[0].ToString().ToUpper() : "") +
                                        (lastName.Length > 0 ? lastName[0].ToString().ToUpper() : "");
                                        displayName = ((firstName + " " + lastName).Trim());
                                    }
                                    else if (!string.IsNullOrWhiteSpace(email) && email.Contains("@"))
                                    {
                                        var namePart = email.Split('@')[0];
                                        var nameParts = namePart.Split(new[] { '.', '-', '_' }, StringSplitOptions.RemoveEmptyEntries);
                                        if (nameParts.Length >= 2)
                                        {
                                            initials = string.Join(" ", nameParts.Select(np => np[0].ToString().ToUpper()));
                                            displayName = string.Join(" ", nameParts.Select(np => char.ToUpper(np[0]) + np.Substring(1)));
                                        }
                                        else if (namePart.Length > 4)
                                        {
                                            // Heuristic: first 4 letters as first name, rest as last name
                                            var first = namePart.Substring(0, 4);
                                            var last = namePart.Substring(4);
                                            initials = (first.Length > 0 ? first[0].ToString().ToUpper() : "") +
                                            (last.Length > 0 ? last[0].ToString().ToUpper() : "");
                                            displayName = char.ToUpper(first[0]) + first.Substring(1) + " " +
                                            (last.Length > 0 ? char.ToUpper(last[0]) + last.Substring(1) : "");
                                        }
                                        else
                                        {
                                            initials = namePart[0].ToString().ToUpper();
                                            displayName = char.ToUpper(namePart[0]) + namePart.Substring(1);
                                        }
                                    }
                                    else
                                    {
                                        initials = "U";
                                        displayName = "User";
                                    }
                                }
                                <span class="avatar-circle">
                                    @initials
                                </span>
                                <span class="user-name">
                                    @displayName
                                </span>


                            </div>

                    </header>
                    <!-- Topbar End -->
                    @RenderBody()
                </div>
                <footer class="border-top footer text-muted">
                    ...
                </footer>
            </div>

        </div>
    }

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const sidebarToggle = document.getElementById('sidebar-toggle');
            const sidebarWrapper = document.getElementById('sidebar-wrapper');
            const bodyElement = document.body;

            if (sidebarToggle) {
                sidebarToggle.addEventListener('click', function(e) {
                    e.preventDefault();
                    sidebarWrapper.classList.toggle('collapsed');
                    bodyElement.classList.toggle('sidebar-collapsed');

                    const icon = sidebarToggle.querySelector('i');
                    if (sidebarWrapper.classList.contains('collapsed')) {
                        icon.classList.remove('bi-chevron-left');
                        icon.classList.add('bi-chevron-right');
                    } else {
                        icon.classList.remove('bi-chevron-right');
                        icon.classList.add('bi-chevron-left');
                    }
                });
            }

            // Handle mobile responsiveness
            function checkWidth() {
                if (window.innerWidth < 768) {
                    sidebarWrapper.classList.add('collapsed');
                    bodyElement.classList.add('sidebar-collapsed');
                    const icon = sidebarToggle.querySelector('i');
                    icon.classList.remove('bi-chevron-left');
                    icon.classList.add('bi-chevron-right');
                }
            }

            // Check width on page load
            checkWidth();

            // Check width on resize
            window.addEventListener('resize', checkWidth);
        });
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
