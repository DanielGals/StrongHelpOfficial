<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - StrongHelpOfficial</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/_Layout.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/StrongHelpOfficial.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    @RenderSection("Styles", required: false)
</head>
<body>
    @{
        string[] approverRoles = new[] {
        "Loans Division Approver",
        "Specialized Accounting Approver",
        "Compensation Management Approver",
        "Benefits Services Officer",
        "Benefit Management Department Head",
        "Approving Officer",
        "Final Disbursement Approver",
        "Approver"
    };

        string roleName = Context.Session.GetString("RoleName") ?? "";
        bool isApproverRole = approverRoles.Contains(roleName);

        // Check if user is deactivated (from session or a flag you set after login)
        // You may set this session value in your AuthController after login:
        // HttpContext.Session.SetString("IsDeactivated", "true");
        bool isDeactivated = (Context.Session.GetString("IsDeactivated") == "true");
    }

    @if (string.IsNullOrEmpty(roleName) || !(roleName == "Employee" || roleName == "Benefits Assistant" || roleName == "Admin" || isApproverRole))
    {
        <header>
            <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
                <div class="container-fluid">
                    <a class="navbar-brand d-flex align-items-center" asp-area="" asp-controller="Home" asp-action="Index">
                        <img src="~/images/shield-logo.svg" alt="Shield Logo" width="32" height="38" class="me-2" style="vertical-align:middle;" />
                        Strong Help
                    </a>
                    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse"
                            aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                        <ul class="navbar-nav flex-grow-1">
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Auth" asp-action="Login">Login</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </nav>
        </header>
        <div class="container">
            <main role="main" class="pb-3">
                @RenderBody()
            </main>
        </div>
    }
    else
    {
        string email = Context.Session.GetString("Email") ?? "user@example.com";

        <div id="wrapper">
            <div id="sidebar-wrapper">
                <button id="sidebar-toggle" type="button">
                    <i class="bi bi-chevron-left"></i>
                </button>
                <div class="sidebar-heading">
                    <img src="~/images/shield-logo.svg" alt="Shield Logo" width="32" height="38" />
                    <span>Strong Help</span>
                </div>
                <div id="user-info-section">
                    <div class="user-info">
                        <h6>Welcome</h6>
                        <small>@email</small>
                    </div>
                </div>
                <nav class="sidebar-menu">
                    @if (!isDeactivated)
                    {
                        if (roleName == "Employee" || ((isApproverRole || roleName == "Benefits Assistant") && ViewContext.RouteData.Values["area"]?.ToString() == "Loaner"))
                        {
                            <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "LoanerDashboard" &&
                             ViewContext.RouteData.Values["Action"]?.ToString() == "Index" ? "active" : "")"
                               href="@Url.Action("Index", "LoanerDashboard", new { area = "Loaner" })"
                               title="Dashboard">
                            <i class="bi bi-speedometer2"></i>
                            <span>Dashboard</span>
                        </a>
                        <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "ApplyForLoan" &&
                         ViewContext.RouteData.Values["Action"]?.ToString() == "Index" ? "active" : "")"
                           href="@Url.Action("Index", "ApplyForLoan", new { area = "Loaner" })"
                           title="Apply For Loan">
                            <i class="bi bi-file-earmark-text"></i>
                            <span>Apply For Loan</span>
                        </a>
                        <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "MyApplication" &&
                         ViewContext.RouteData.Values["Action"]?.ToString() == "Index" ? "active" : "")"
                           href="@Url.Action("Index", "MyApplication", new { area = "Loaner" })"
                           title="My Loans">
                            <i class="bi bi-card-checklist"></i>
                            <span>My Loans</span>
                        </a>
                        <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "LoanerLoanHistory" &&
                         ViewContext.RouteData.Values["Action"]?.ToString() == "Index" ? "active" : "")"
                           href="@Url.Action("Index", "LoanerLoanHistory", new { area = "Loaner" })"
                           title="Loan History">
                            <i class="bi bi-clock-history"></i>
                            <span>Loan History</span>
                        </a>
                        }
                        else if (roleName == "Benefits Assistant" && ViewContext.RouteData.Values["area"]?.ToString() != "Loaner")
                        {
                            <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "BenefitsAssistantDashboard" && ViewContext.RouteData.Values["Action"]?.ToString() == "Index" ? "active" : "")"
                               href="@Url.Action("Index", "BenefitsAssistantDashboard", new { area = "" })"
                               title="Dashboard">
                            <i class="bi bi-speedometer2"></i>
                            <span>Dashboard</span>
                        </a>
                        <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "BenefitsAssistantApplications" && ViewContext.RouteData.Values["Action"]?.ToString() == "Index" ? "active" : "")"
                               href="@Url.Action("Index", "BenefitsAssistantApplications", new { area = "" })"
                               title="Applications">
                            <i class="bi bi-file-earmark-text"></i>
                            <span>Applications</span>
                        </a>
                        <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "BenefitsAssistantReports" && ViewContext.RouteData.Values["Action"]?.ToString() == "Index" ? "active" : "")"
                               href="@Url.Action("Index", "BenefitsAssistantReports", new { area = "" })"
                               title="Reports">
                            <i class="bi bi-bar-chart"></i>
                            <span>Reports</span>
                        </a>
                        <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "BenefitsAssistantLogs" && ViewContext.RouteData.Values["Action"]?.ToString() == "Index" ? "active" : "")"
                               href="@Url.Action("Index", "BenefitsAssistantLogs", new { area = "" })"
                               title="Logs">
                            <i class="bi bi-journal-text"></i>
                            <span>Logs</span>
                        </a>
                        <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "BenefitsAssistant" && ViewContext.RouteData.Values["Action"]?.ToString() == "LoanInformation" ? "active" : "")"
                               href="@Url.Action("LoanInformation", "BenefitsAssistant", new { area = "" })"
                               title="Loan Information">
                            <i class="bi bi-info-circle"></i>
                            <span>Loan Information</span>
                        </a>
                        }
                        else if (roleName == "Admin")
                        {
                            <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "AdminDashboard" &&
                               ViewContext.RouteData.Values["Action"]?.ToString() == "Index" ? "active" : "")"
                               href="@Url.Action("Index", "AdminDashboard")"
                               title="Dashboard">
                            <i class="bi bi-speedometer2"></i>
                            <span>Dashboard</span>
                        </a>
                        <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "AdminUsers" &&
                               ViewContext.RouteData.Values["Action"]?.ToString() == "Index" ? "active" : "")"
                               href="@Url.Action("Index", "AdminUsers")"
                               title="Users">
                            <i class="bi bi-people"></i>
                            <span>Users</span>
                        </a>
                        <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "AdminLogs" &&
                               ViewContext.RouteData.Values["Action"]?.ToString() == "Index" ? "active" : "")"
                               href="@Url.Action("Index", "AdminLogs")"
                               title="Logs">
                            <i class="bi bi-journal-text"></i>
                            <span>Logs</span>
                        </a>
                        <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "AdminRAD" &&
                               ViewContext.RouteData.Values["Action"]?.ToString() == "Index" ? "active" : "")"
                               href="@Url.Action("Index", "AdminRAD")"
                               title="Roles and Departments">
                            <i class="bi bi-person-gear"></i>
                            <span>Roles and Departments</span>
                        </a>
                        }
                        else if (ViewContext.RouteData.Values["area"]?.ToString() != "Loaner")
                        {
                            <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "ApproverDashboard" &&
                               ViewContext.RouteData.Values["Action"]?.ToString() == "Index" ? "active" : "")"
                               href="@Url.Action("Index", "ApproverDashboard")"
                               title="Dashboard">
                            <i class="bi bi-speedometer2"></i>
                            <span>Dashboard</span>
                        </a>
                        <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "ApproverApplications" &&
                               ViewContext.RouteData.Values["Action"]?.ToString() == "Index" ? "active" : "")"
                               href="@Url.Action("Index", "ApproverApplications")"
                               title="Applications">
                            <i class="bi bi-file-earmark-text"></i>
                            <span>Applications</span>
                        </a>
                        <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "ApproverReports" &&
                               ViewContext.RouteData.Values["Action"]?.ToString() == "Index" ? "active" : "")"
                               href="@Url.Action("Index", "ApproverReports")"
                               title="Reports">
                    <i class="bi bi-bar-chart"></i>
                            <span>Reports</span>
                        </a>
                        <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "ApproverLogs" &&
                               ViewContext.RouteData.Values["Action"]?.ToString() == "Index" ? "active" : "")"
                               href="@Url.Action("Index", "ApproverLogs")"
                               title="Logs">

                            <i class="bi bi-journal-text"></i>
                            <span>Logs</span>
                        </a>
                        }
                    }
                    <div class="mt-auto pt-3">
                        <a class="nav-link" href="@Url.Action("Logout", "LoanerDashboard", new { area = "Loaner" })"
                            title="Logout">
                            <i class="bi bi-box-arrow-right"></i>
                            <span>Logout</span>
                        </a>
                    </div>
                </nav>
            </div>
            <div id="content-wrapper">
                <div class="main-content">
                    <!-- Topbar Start -->
                    <header class="topbar">
                        <div class="topbar-title">
                            <span>@ViewData["Title"]</span>
                        </div>
                        <div class="topbar-actions">
                            <div class="notification">
                                <span class="notification-bell-wrapper" id="notificationBellBtn">
                                    <i class="bi bi-bell"></i>
                                    <span class="notification-dot"></span>
                                </span>
                            </div>
                            <div class="user-avatar">
                                @{
                                    var firstName = Context.Session.GetString("FirstName") ?? "";
                                    var lastName = Context.Session.GetString("LastName") ?? "";
                                    string initials;
                                    string displayName;

                                    if (!string.IsNullOrWhiteSpace(firstName) || !string.IsNullOrWhiteSpace(lastName))
                                    {
                                        initials = (firstName.Length > 0 ? firstName[0].ToString().ToUpper() : "") +
                                        (lastName.Length > 0 ? lastName[0].ToString().ToUpper() : "");
                                        displayName = ((firstName + " " + lastName).Trim());
                                    }
                                    else if (!string.IsNullOrWhiteSpace(email) && email.Contains("@"))
                                    {
                                        var namePart = email.Split('@')[0];
                                        var nameParts = namePart.Split(new[] { '.', '-', '_' }, StringSplitOptions.RemoveEmptyEntries);
                                        if (nameParts.Length >= 2)
                                        {
                                            initials = string.Join(" ", nameParts.Select(np => np[0].ToString().ToUpper()));
                                            displayName = string.Join(" ", nameParts.Select(np => char.ToUpper(np[0]) + np.Substring(1)));
                                        }
                                        else if (namePart.Length > 4)
                                        {
                                            var first = namePart.Substring(0, 4);
                                            var last = namePart.Substring(4);
                                            initials = (first.Length > 0 ? first[0].ToString().ToUpper() : "") +
                                            (last.Length > 0 ? last[0].ToString().ToUpper() : "");
                                            displayName = char.ToUpper(first[0]) + first.Substring(1) + " " +
                                            (last.Length > 0 ? char.ToUpper(last[0]) + last.Substring(1) : "");
                                        }
                                        else
                                        {
                                            initials = namePart[0].ToString().ToUpper();
                                            displayName = char.ToUpper(namePart[0]) + namePart.Substring(1);
                                        }
                                    }
                                    else
                                    {
                                        initials = "U";
                                        displayName = "User";
                                    }
                                }
                                <span class="avatar-circle">
                                    @initials
                                </span>
                                <span class="user-name">
                                    @displayName
                                </span>
                            </div>
                    </header>
                    <!-- Topbar End -->
                    @RenderBody()
                </div>
                <footer class="custom-footer">
                    <div class="footer-content">
                        &copy; 2025 StrongHelp. All rights reserved. A capstone project by STI College Global City.
                    </div>
                </footer>
            </div>
        </div>
    }

    <!-- Notification Modal -->
    <div class="modal fade" id="notificationModal" tabindex="-1" aria-labelledby="notificationModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="notificationModalLabel">Notifications</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div>
                        <strong>Your Notifications:</strong>
                        <div id="coMakerNotificationCards"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <!-- General Notification Modal -->
    <div class="modal fade" id="notificationCardModal" tabindex="-1" aria-labelledby="notificationCardModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content" id="notificationCardModalContent">
                <!-- Cards will be loaded here via AJAX -->
            </div>
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/js/_Layout.js" asp-append-version="true"></script>
    <script>
        $(function () {
            $('#notificationBellBtn').on('click', function () {
                var modal = new bootstrap.Modal(document.getElementById('notificationModal'));
                modal.show();

                // Load co-maker requests for the current user
                $.get('/api/Notifications/CoMakerRequests', function (data) {
                    console.log(data);
                    var container = $('#coMakerNotificationCards');
                    container.empty();

                    if (!data || data.length === 0) {
                        container.append('<div class="text-muted text-center my-3">No notifications</div>');
                        return;
                    }

                    data.forEach(function (item) {
                        var card = `
                            <div class="card mb-3">
                                <div class="card-body">
                                    <h5 class="card-title">Co-maker Request</h5>
                                    <h6 class="card-subtitle mb-2 text-muted">
                                        You are invited to be the co-maker for <strong>${item.applicantName}</strong>'s loan application.
                                    </h6>
                                    <div class="d-flex gap-2">
                                        <button class="btn btn-success btn-sm" onclick="handleCoMakerAction(${item.loanId}, 'Accept', this)">Approve</button>
                                        <button class="btn btn-danger btn-sm" onclick="handleCoMakerAction(${item.loanId}, 'Reject', this)">Reject</button>
                                    </div>
                                </div>
                            </div>
                        `;
                        container.append(card);
                    });
                });
            });
        });

        function handleCoMakerAction(loanId, action, btn) {
            $(btn).prop('disabled', true);
            $.ajax({
                url: '/api/Notifications/CoMakerAction',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ LoanID: loanId, Action: action }),
                success: function () {
                    $(btn).closest('.card').fadeOut();
                },
                error: function (xhr) {
                    let msg = 'Failed to update. Please try again.';
                    if (xhr.status === 401) msg = 'Session expired. Please log in again.';
                    else if (xhr.status === 404) msg = 'This request is no longer available.';
                    else if (xhr.status === 400) msg = 'Invalid action.';
                    alert(msg);
                    $(btn).prop('disabled', false);
                }
            });
        }
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
