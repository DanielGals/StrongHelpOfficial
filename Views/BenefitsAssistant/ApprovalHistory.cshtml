@model BenefitsAssistantApplicationDetailsViewModel
@{
    ViewData["Title"] = "Approval History";
    ViewBag.IdParamName = "id";
    ViewBag.LoanID = Model.LoanID;
    ViewBag.Status = Model.ApplicationStatus;
    ViewBag.TabArea = "";
}

@section Styles {
    <link rel="stylesheet" href="~/css/LoanApplicationDetails.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/MyApplication.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/BenefitsAssistantApprovalHistory.css" asp-append-version="true" />
}

<div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center mb-4">
    <div>
        <h2 class="fw-bold mb-1">Approval History</h2>
        <div class="text-muted mb-2" style="font-size:1em;">Current Status and details of your application</div>
    </div>
</div>

@{
    ViewBag.LoanID = Model.LoanID;
    ViewBag.Status = Model.ApplicationStatus;
}
@await Html.PartialAsync("_LoanApplicationTabs")

@{
    var ba = Model.Approvers.FirstOrDefault(a => a.RoleName.Contains("Benefits Assistant"));
    var allOthers = Model.Approvers
        .Where(a => !a.RoleName.Contains("Benefits Assistant"))
        .OrderBy(a => a.Order)
        .ToList();
    
    var others = new List<ApproverViewModel>();
    foreach (var approver in allOthers)
    {
        others.Add(approver);
        if (approver.Status == "Rejected" || approver.Status == "Pending")
            break;
    }
}

@foreach (var approval in others.AsEnumerable().Reverse())
{
    var isRejected = approval.Status == "Rejected";
    var isApproved = approval.Status == "Approved";
    var isPending = approval.Status == "Pending";
    
    var lineColor = isRejected ? "#dc3545" : (isApproved ? "#28a745" : "#3243c0");
    
    var displayText = isPending
        ? $"Currently reviewing by {approval.UserName} on {Model.DateSubmitted.ToString("yyyy-MM-dd")}"
        : $"{approval.Status} by {approval.UserName} on {approval.ApprovedDate?.ToString("yyyy-MM-dd")}";

    <div class="approval-history-item" style="border-left: 3px solid @lineColor; padding-left: 1rem; margin-bottom: 2rem;">
        <div class="loan-details-label" style="margin-bottom:0.1em; color: @lineColor; font-weight: bold;">
            @approval.RoleName @(isPending ? "Review" : approval.Status)
        </div>
        <div>
            <span>
                @displayText
            </span>
            @if (!string.IsNullOrEmpty(approval.Description))
            {
                <div class="approval-comments mt-2">
                    <i class="bi bi-chat-left-text"></i> @approval.Description
                </div>
            }
        </div>
    </div>
}

@if (ba != null)
{
    var baIsRejected = ba.Status == "Rejected";
    var baLineColor = baIsRejected ? "#dc3545" : "#3243c0";
    var baActionText = baIsRejected ? "Rejected" : "Reviewed";
    
    <div class="approval-history-item" style="border-left: 3px solid @baLineColor; padding-left: 1rem; margin-bottom: 2rem;">
        <div class="loan-details-label" style="margin-bottom:0.1em; color: @baLineColor; font-weight: bold;">
            @ba.RoleName @baActionText
        </div>
        <div>
            <span>
                @baActionText by @ba.UserName on @(ba.ApprovedDate?.ToString("yyyy-MM-dd") ?? Model.DateSubmitted.ToString("yyyy-MM-dd"))
            </span>
            @if (!string.IsNullOrEmpty(ba.Description))
            {
                <div class="approval-comments mt-2">
                    <i class="bi bi-chat-left-text"></i> @ba.Description
                </div>
            }
        </div>
    </div>
}

<!-- Application Submitted (always last) -->
<div class="approval-history-submitted" style="border-left: 3px solid #3243c0; padding-left: 1rem; margin-bottom: 2rem;">
    <div class="loan-details-label" style="margin-bottom:0.1em; color: #3243c0; font-weight: bold;">Application Submitted</div>
    <div>
        <span>
            Submitted by @Model.EmployeeName on @Model.DateSubmitted.ToString("yyyy-MM-dd")
        </span>
    </div>
</div>