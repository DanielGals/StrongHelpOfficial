@model LoanApplicationDetailsViewModel
@{
    ViewData["Title"] = "Loan Application Details";
    var canDelete = Model.ApplicationStatus == "Submitted" || Model.ApplicationStatus == "Drafted";
}

@section Styles {
    <link rel="stylesheet" href="~/css/LoanApplicationDetails.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/MyApplication.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/svg-icons.css" asp-append-version="true" />
}

<div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center mb-4">
    <div>
        <h2 class="fw-bold mb-1">Loan Application Details</h2>
        <div class="text-muted mb-2" style="font-size:1em;">Current Status and details of your application</div>
    </div>
    @if (canDelete)
    {
        <div class="mt-3 mt-md-0">
            <button id="deleteAppBtn" type="button" class="btn btn-danger rounded-pill d-flex align-items-center px-4 py-2" style="font-weight:500;">
                Delete Application
                <span class="ms-2">
                    <img src="~/images/trash-icon.svg" width="18" height="18" class="svg-trash-current" alt="Delete" />
                </span>
            </button>
        </div>
    }
</div>

@if (canDelete)
{
    <!-- Delete Confirmation Modal -->
    <div class="modal fade" id="deleteAppModal" tabindex="-1" aria-labelledby="deleteAppModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteAppModalLabel">Confirm Deletion</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete your application? This action cannot be undone.
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">No</button>
                    <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Yes, Delete</button>
                </div>
            </div>
        </div>
    </div>
}

@{
    ViewBag.LoanID = Model.LoanID;
    ViewBag.Status = Model.ApplicationStatus;
}
@await Html.PartialAsync("_LoanApplicationTabs", null, new ViewDataDictionary(ViewData) {
    { "TabController", "MyApplication" },
    { "TabArea", "Loaner" }
})

<!--LOAN DETAILS-->
<div class="row mb-3">
    <div class="col-md-6 mb-2">
        <div class="loan-details-label">Employee Name</div>
        <div>@Model.EmployeeName</div>
    </div>
    <div class="col-md-6 mb-2">
        <div class="loan-details-label">Amount Applied For</div>
        <div>₱@Model.LoanAmount.ToString("N0")</div>
    </div>
    <div class="col-md-6 mb-2">
        <div class="loan-details-label">Department</div>
        <div>@Model.Department</div>
    </div>
    <div class="col-md-6 mb-2">
        <div class="loan-details-label">Co-Maker</div>
        <div>@(Model.CoMakerName ?? "N/A")</div>
    </div>
</div>
<hr />

<h5 class="fw-bold mb-3">Documents Submitted</h5>
@{
    var loanerDocs = Model.Documents?.Where(d => d.LoanApprovalID == null).ToList();
}
@if (loanerDocs != null && loanerDocs.Any())
{
    foreach (var doc in loanerDocs)
    {
        <div class="loan-details-document">
            <div>
                <div class="doc-title">@doc.Name</div>
                <div class="doc-type">@doc.Type</div>
            </div>
            <button type="button"
                    class="btn btn-light doc-view-btn"
                    data-doc-url="@Url.Action("Preview", "Document", new { area = "Loaner", id = doc.LoanDocumentID })"
                    data-doc-type="@doc.Type"
                    data-doc-name="@doc.Name">
                View
            </button>
        </div>
    }
}
else
{
    <div class="alert alert-info">No documents submitted.</div>
}

<!-- Modal for document preview -->
<div class="modal fade" id="docPreviewModal" tabindex="-1" aria-labelledby="docPreviewModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="docPreviewModalLabel">Document Preview</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="docPreviewBody" style="min-height:60vh;">
                <!-- Content will be injected here -->
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Document preview
            const previewModal = new bootstrap.Modal(document.getElementById('docPreviewModal'));
            document.querySelectorAll('.doc-view-btn').forEach(btn => {
                btn.addEventListener('click', function () {
                    const url = this.getAttribute('data-doc-url');
                    const type = this.getAttribute('data-doc-type');
                    const name = this.getAttribute('data-doc-name');
                    let content = '';

                    if (type.toLowerCase().includes('pdf')) {
                        content = `<iframe src="${url}" width="100%" height="500px" style="border:none;"></iframe>`;
                    } else if (type.toLowerCase().includes('image')) {
                        content = `<img src="${url}" alt="${name}" class="img-fluid" />`;
                    } else {
                        content = `<a href="${url}" target="_blank">Download/Open Document</a>`;
                    }

                    document.getElementById('docPreviewModalLabel').textContent = name;
                    document.getElementById('docPreviewBody').innerHTML = content;
                    previewModal.show();
                });
            });

            // Delete Application Button Logic (only if isLoaner)
            var isLoaner = @canDelete.ToString().ToLower();
            if (isLoaner) {
                const deleteBtn = document.getElementById('deleteAppBtn');
                const deleteModal = new bootstrap.Modal(document.getElementById('deleteAppModal'));
                const confirmDeleteBtn = document.getElementById('confirmDeleteBtn');

                deleteBtn.addEventListener('click', function () {
                    deleteModal.show();
                });

                confirmDeleteBtn.addEventListener('click', function () {
                    var loanId = '@Model.LoanID';
                    window.location.href = '@Url.Action("DeleteSubmission", "MyApplication", new { area = "Loaner", loanId = "__LOANID__" })'.replace('__LOANID__', encodeURIComponent(loanId));
                });
            }
        });
    </script>
}
