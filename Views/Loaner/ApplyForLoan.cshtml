@model StrongHelpOfficial.Models.ApplyForLoanViewModel
@{
    ViewData["Title"] = "Apply For Loan";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var userId = ViewData["UserID"];
    var roleName = ViewData["RoleName"];
    var email = ViewData["Email"];
    var documentCount = ViewData["DocumentCount"];
}
@section Styles {
    <link rel="stylesheet" href="~/css/LoanerDashboard.css" asp-append-version="true" />
}
<h2>Employee Salary Loan</h2>
<p class="text-muted mb-4">Hello @roleName! Upload required documents and add a co-maker to submit your loan application</p>

<!-- button and highlights-->
<div class="container">
    <div class="custom-row">
        <div class="col-6">
            <a href="" id="btn1" class="btn custom-highlight w-100">Documents</a>
        </div>
        <!--CO MAKER HERE!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!-->
        <div class="col-6">
            <a href="" id="btn2" class="btn custom-outline w-100">Co-Maker</a>
        </div>
    </div>
</div>
<br />
<!-- the entire process (loan amount, guidelines, documents-->
<div class="afl-content">
    <div class="row">
        <div class="col-md-8 mb-3">
            @if (TempData["test"] != null)
            {
                @TempData["test"];
            }
            @if (TempData["submitResult"] != null)
            {
                <div class="alert alert-success" role="alert">
                    @TempData["submitResult"]
                </div>
            }
                
            <!-- LOAN APPLICATION -->
            <form asp-controller="ApplyForLoan" asp-action="UploadDocuments" method="post" enctype="multipart/form-data">

                <!-- loan amount -->
                <label for="loanAmount" class="form-label fw-bold mb-1">Loan Amount</label>
                <input class="form-control" type="number" asp-for="LoanAmount" id="loanAmount" placeholder="Enter amount">
                <span asp-validation-for="LoanAmount" class="text-danger"></span>
                <br>
                <!-- documents upload part -->
                <div class="upload-container">
                    <h4>Document Upload</h4>
                    <p class="text-muted mb-4">
                        Please upload all required documents to process your application
                    </p>
                    <div class="info-box mb-4">
                        <i class="bi bi-exclamation-circle-fill text-primary fs-4"></i>
                        <div>
                            <h6 class="mb-1">Important</h6>
                            <p class="mb-0">Please ensure all documents are clear, legible, and in PDF or image format.<br>Documents must be recent and valid</p>
                        </div>
                    </div>
                    <!-- actual file upload -->
                    <div class="mb-4">
                            <!-- Replace the file input and add a script to append file name and type to hidden fields for the model -->
                            <div class="mb-4">
                                <div id="drop-area" class="drop-area rounded p-4 text-center text-muted" onclick="document.getElementById('files').click();">
                                    Drop files here or click to select
                                    <input type="file" accept=".pdf" id="files" asp-for="Filecontent" hidden multiple onchange="handleFileSelect(event)">
                                    <!-- Hidden fields for file name and type -->
                                    <input type="hidden" id="LoanDocumentName" name="LoanDocumentName" value="@Model.LoanDocumentName" />
                                    <input type="hidden" id="FileContent" name="FileContent" value="@Model.Filecontent" />
                                </div>
                            </div>
                        <script>
                            
                            function handleFileSelect(event) {
                                const files = event.target.files;

                                if (files.length > 0) {
                                    // Prepare arrays to hold file names and file objects
                                    let fileNames=[];
                                    let fileContents=[];
                                    for (let i = 0; i < files.length; i++) {
                                        fileNames.push(files[i].name);
                                        fileContents.push(files[i]);
                                    }

                                    for (let j = 0; j < fileNames.length; j++) {
                                        // Create a new div for each file name
                                        const docItem = document.createElement('div');
                                        docItem.className = 'doc-item d-flex align-items-center justify-content-between';

                                        // Create the readonly input for file name
                                        const input = document.createElement('input');
                                        input.type = 'text';
                                        input.value = fileNames[j];
                                        input.readOnly = true;
                                        input.className = 'form-control';

                                        // Create the delete button
                                        const deleteBtn = document.createElement('button');
                                        deleteBtn.type = 'button';
                                        deleteBtn.className = 'btn btn-danger btn-sm ms-2';
                                        deleteBtn.style.marginLeft = 'auto';
                                        deleteBtn.innerHTML = '<i class="bi bi-x"></i> Delete';

                                        // Attach click event to remove the file
                                        deleteBtn.addEventListener('click', function () {
                                            files.splice(files.findIndex(files.name.find(fileNames[j])), 1);

                                            // Update hidden fields
                                            //document.getElementById('LoanDocumentName').value = fileNames.join(',');
                                            //document.getElementById('FileContent').value = fileContents.join(',');

                                            // Remove the element from DOM
                                            docItem.remove();
                                        });

                                        // Append input and button to the docItem div
                                        docItem.appendChild(input);
                                        docItem.appendChild(deleteBtn);

                                        document.getElementById('submittedDocs').appendChild(docItem);
                                    }

                                    // Store file objects in a global array for further processing (e.g., upload via AJAX)
                                    window.selectedFiles = fileContents;

                                    // Optionally, update a hidden field with the count or a placeholder value
                                    //document.getElementById('FileContent').value = fileContents.join(',');
                                }
                            }
                        </script>
                    </div>
                    <!-- submitted documents list -->
                    <div id="submittedDocs" class="border rounded p-3">
                        <strong class="d-block mb-2">Submitted Documents:</strong>
                    </div>
                </div>
                <!-- SUBMIT BUTTON -->
                <input class="btn btn-primary w-100" type="submit">
            </form>
        </div>
        <div class="col-md-4">
            <div class="guideline-box">
                <h3>Loan Information</h3>
                <p class="mb-3 fc-gray">
                    Important details about about our loan offerings and requirements
                </p>
                <p class="mb-1 fw-bold">
                    Required Documents
                </p>
                <p class="mb-0"> • Latest 2 months payslip</p>
                <p class="mb-0"> • Certificate of Employment</p>
                <p class="mb-0"> • Valid government-issued ID</p>
            </div>
        </div>
    </div>
    <!-- submissions-info-->
    <div class="submissions-box mb-3">
        <div class="info-item">
            <i class="bi bi-file-earmark-text fs-4 text-secondary"></i>
            <span class="info-text1">Documents: @documentCount/3 submitted</span>
        </div>
        <div class="info-item">
            <i class="bi bi-people-fill fs-4 text-secondary"></i>
            <span class="info-text">Co-Maker: Required</span>
        </div>
    </div>
</div>

<script>
    const btn1 = document.getElementById("btn1");
    const btn2 = document.getElementById("btn2");

    btn1.addEventListener("click", () => {
      btn1.classList.replace("custom-outline", "custom-highlight");
      btn2.classList.replace("custom-highlight", "custom-outline");
    });

    btn2.addEventListener("click", () => {
      btn2.classList.replace("custom-outline", "custom-highlight");
      btn1.classList.replace("custom-highlight", "custom-outline");
    });

</script>

<style>
        .custom-row {
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            justify-content: center;
            background-color: #f0f0f0;
            padding: 5px;
            border-radius: 5px;
        }

        .custom-highlight {
            background-color: #100899;
            color: white;
        }

        .custom-outline {
            background-color: transparent;
            color: gray;
        }
        .custom-highlight:hover,
        .custom-outline:hover {
            background-color: inherit !important;
            color: inherit !important;
            border-color: inherit !important;
        }
        .guideline-box {
            border: 1px solid #ccc;
            background-color: transparent;
            padding: 2rem;
            border-radius: 0.5rem;
            height: auto;
        }
        .fc-gray{
            color: gray;
        }

        .upload-container {
            border: 1px solid #ccc;
            border-radius: 0.5rem;
            padding: 1.5rem;
        }

        .info-box {
            background-color: #e7f1ff;
            border: 1px solid #0d6efd;
            border-radius: 0.5rem;
            padding: 1rem;
            color: #0d6efd;
            display: flex;
            align-items: start;
            gap: 1rem;
        }

        .submissions-box {
            border: 1px solid #ced4da;
            border-radius: 0.75rem;
            padding: 1rem 1.5rem;
            background-color: #f8f9fa;
            display: flex;
            justify-content: flex-start;
            align-items: flex-start;
            gap: 1rem;
        }
        .info-item {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .info-text {
            font-weight: 500;
        }
        
        .info-text1 {
            font-weight: 500;
        }

        .drop-area {
            border: 2px dashed #6c757d;
            padding: 1.5rem;
            border-radius: 0.5rem;
            text-align: center;
            color: #6c757d;
            cursor: pointer;
        }

        .drop-area.dragover {
            background-color: #e2e6ea;
        }

        .submitted-docs {
            border: 1px solid #ccc;
            border-radius: 0.5rem;
            padding: 1rem;
            margin-top: 1rem;
        }

        .doc-item {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            margin-bottom: 0.5rem;
        }

            .doc-item input {
                flex: 1;
            }
</style>