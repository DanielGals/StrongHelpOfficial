@model StrongHelpOfficial.Models.ApproverDashboardViewModel
@{
    ViewData["Title"] = $"{Model.RoleName} Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="~/css/LoanerDashboard.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/BenefitsAssistantDashboard.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/MyApplication.css" asp-append-version="true" />
    <style>
        .dashboard-search-filter-row {
            display: flex;
            flex-wrap: wrap;
            align-items: center;
            gap: 1rem;
            margin-bottom: 1.25rem;
        }

        .dashboard-search {
            flex: 1;
            min-width: 200px;
        }

        .dashboard-filter-btn {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            background: #fff;
            border: 1px solid #d1d5db;
            border-radius: 0.5rem;
            padding: 0.5rem 1rem;
            font-weight: 500;
            color: #2563eb;
            cursor: pointer;
            transition: border 0.2s, box-shadow 0.2s;
        }

        .dashboard-filter-btn i {
            font-size: 1.1rem;
        }
    </style>
}

<div class="dashboard-content">
    <h2 class="fw-bold mb-1">Welcome, @Model.UserName!</h2>
    <p class="text-muted">
        @Model.RoleName Dashboard - Here's an overview of loan applications assigned to you
    </p>

    <div class="stats-grid">
        <div class="stat-card">
            <div class="stat-icon">
                <i class="bi bi-clock"></i>
            </div>
            <div class="stat-content">
                <h3>Pending Review</h3>
                <p class="stat-number">@Model.PendingReview</p>
            </div>
        </div>
        <div class="stat-card">
            <div class="stat-icon">
                <i class="bi bi-hourglass-split"></i>
            </div>
            <div class="stat-content">
                <h3>In Progress</h3>
                <p class="stat-number">@Model.InProgress</p>
            </div>
        </div>
        <div class="stat-card">
            <div class="stat-icon">
                <i class="bi bi-check-circle"></i>
            </div>
            <div class="stat-content">
                <h3>Completed</h3>
                <p class="stat-number">@Model.Completed</p>
            </div>
        </div>
    </div>

    <!-- Search and Filters Row -->
    <form id="filterForm" method="get" action="@Url.Action("Index", "ApproverDashboard")">
        <div class="dashboard-search-filter-row">
            <div class="dashboard-search">
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="bi bi-search"></i>
                    </span>
                    <input type="text" class="form-control" id="applicationSearch" name="searchQuery"
                        placeholder="Search Applications by employee name..." value="@Model.SearchQuery">
                </div>
            </div>
            <button type="button" class="dashboard-filter-btn" data-bs-toggle="modal" data-bs-target="#filterModal">
                <i class="bi bi-funnel"></i> Filters
                @if (Model.MinAmount.HasValue || Model.MaxAmount.HasValue || Model.StartDate.HasValue ||
                                Model.EndDate.HasValue)
                {
                    <span class="badge bg-primary ms-2">Active</span>
                }
            </button>
        </div>
    </form>

    <!-- Filter Modal -->
    <div class="modal fade" id="filterModal" tabindex="-1" aria-labelledby="filterModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="filterModalLabel">Filter Applications</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form id="filterModalForm" method="get" action="@Url.Action("Index", "ApproverDashboard")">
                    <div class="modal-body">
                        <input type="hidden" name="searchQuery" value="@Model.SearchQuery">
                        <div class="row g-3">
                            <!-- Amount Range -->
                            <div class="col-md-6">
                                <h5 class="mb-3">Amount Range</h5>
                                <div class="row g-2">
                                    <div class="col-6">
                                        <label for="minAmount" class="form-label">Minimum (₱)</label>
                                        <input type="number" class="form-control" id="minAmount" name="minAmount"
                                            value="@(Model.MinAmount?.ToString() ?? "")" placeholder="Min amount">
                                    </div>
                                    <div class="col-6">
                                        <label for="maxAmount" class="form-label">Maximum (₱)</label>
                                        <input type="number" class="form-control" id="maxAmount" name="maxAmount"
                                            value="@(Model.MaxAmount?.ToString() ?? "")" placeholder="Max amount">
                                    </div>
                                </div>
                            </div>

                            <!-- Date Range -->
                            <div class="col-md-6">
                                <h5 class="mb-3">Application Date</h5>
                                <div class="row g-2">
                                    <div class="col-6">
                                        <label for="startDate" class="form-label">From</label>
                                        <input type="date" class="form-control" id="startDate" name="startDate"
                                            value="@(Model.StartDate?.ToString("yyyy-MM-dd") ?? "")">
                                    </div>
                                    <div class="col-6">
                                        <label for="endDate" class="form-label">To</label>
                                        <input type="date" class="form-control" id="endDate" name="endDate"
                                            value="@(Model.EndDate?.ToString("yyyy-MM-dd") ?? "")">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-outline-secondary" id="clearFiltersBtn">Clear
                            Filters</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Apply Filters</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- JavaScript for client-side search (SPA style) and filter toggling -->
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Filter modal functionality
            const clearFiltersBtn = document.getElementById('clearFiltersBtn');

            if (clearFiltersBtn) {
                clearFiltersBtn.addEventListener('click', function () {
                    // Clear all filter inputs
                    document.getElementById('minAmount').value = '';
                    document.getElementById('maxAmount').value = '';
                    document.getElementById('startDate').value = '';
                    document.getElementById('endDate').value = '';
                });
            }

            // Initialize Bootstrap tooltips if any are used
            const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            if (typeof bootstrap !== 'undefined') {
                tooltipTriggerList.map(function (tooltipTriggerEl) {
                    return new bootstrap.Tooltip(tooltipTriggerEl);
                });
            }

            const searchInput = document.getElementById('applicationSearch');
            const tableRows = document.querySelectorAll('table tbody tr:not(.no-results)');
            let noResultsRow = document.querySelector('table tbody tr.no-results');

            // If search input exists but has an error due to layout change, handle it gracefully
            if (!searchInput) {
                console.warn('Search input not found. Layout may have changed.');
                return;
            }

            if (!noResultsRow) {
                // Create a "no results" row if it doesn't exist
                noResultsRow = document.createElement('tr');
                noResultsRow.className = 'no-results';
                noResultsRow.style.display = 'none';
                const noResultsCell = document.createElement('td');
                noResultsCell.colSpan = 6;
                noResultsCell.className = 'text-center';
                noResultsCell.textContent = 'No matching applications found';
                noResultsRow.appendChild(noResultsCell);

                if (tableRows.length > 0) {
                    tableRows[0].parentNode.appendChild(noResultsRow);
                }
            }

            // Function to filter table rows based on search term
            function filterApplications() {
                const searchTerm = searchInput.value.toLowerCase().trim();
                let visibleCount = 0;

                tableRows.forEach(row => {
                    const employeeNameCell = row.querySelector('td:nth-child(1)');
                    const loanTypeCell = row.querySelector('td:nth-child(2)');
                    const amountCell = row.querySelector('td:nth-child(3)');
                    const applicationIdText = row.querySelector('a[href*="id="]')?.href.match(/id=(\d+)/)?.[1] || '';

                    if (!employeeNameCell) return; // Skip if row structure is unexpected

                    const employeeName = employeeNameCell.textContent.toLowerCase();
                    const loanType = loanTypeCell?.textContent.toLowerCase() || '';
                    const amount = amountCell?.textContent.toLowerCase() || '';

                    if (searchTerm === '' ||
                        employeeName.includes(searchTerm) ||
                        loanType.includes(searchTerm) ||
                        amount.includes(searchTerm) ||
                        applicationIdText.includes(searchTerm)) {
                        row.style.display = '';
                        visibleCount++;
                    } else {
                        row.style.display = 'none';
                    }
                });

                // Show or hide the "no results" row
                noResultsRow.style.display = visibleCount === 0 ? '' : 'none';
            }

            // Filter applications on keyup with small delay for performance
            searchInput.addEventListener('keyup', function () {
                setTimeout(filterApplications, 100);
            });

            // Initial filter in case there's a search value already
            filterApplications();

            // Responsive placeholder
            function updatePlaceholder() {
                if (window.innerWidth <= 480) {
                    searchInput.placeholder = 'Search...';
                } else if (window.innerWidth <= 768) {
                    searchInput.placeholder = 'Search by name...';
                } else {
                    searchInput.placeholder = 'Search Applications by employee name...';
                }
            }
            updatePlaceholder();
            window.addEventListener('resize', updatePlaceholder);
        });
    </script>

    <div class="benefits-content-grid">
        <div class="pending-applications-section">
            <h2>Pending Applications</h2>
            <p class="text-muted">Loan Applications awaiting your approval</p>

            <div class="table-responsive">
                <table class="table align-middle mb-0">
                    <thead>
                        <tr>
                            <th>Employee</th>
                            <th>Loan Type</th>
                            <th>Amount</th>
                            <th>Date Applied</th>
                            <th>Status</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.PendingApplications != null && Model.PendingApplications.Any())
                        {
                            foreach (var app in Model.PendingApplications)
                            {
                                <tr>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="avatar-circle me-2">
                                                @app.Initials
                                            </div>
                                            <div>
                                                <div class="fw-semibold">@app.EmployeeName</div>
                                            </div>
                                        </div>
                                    </td>
                                    <td>@app.LoanType</td>
                                    <td>₱@app.Amount.ToString("N0")</td>
                                    <td>@app.DateApplied.ToString("MMMM d, yyyy")</td>
                                    <td>
                                        @{
                                            string statusClass = app.Status switch
                                            {
                                                "Submitted" => "status-badge status-submitted",
                                                "In Review" => "status-badge status-inreview",
                                                "In Progress" => "status-badge status-inreview",
                                                "Approved" => "status-badge status-approved",
                                                "Rejected" => "status-badge status-rejected",
                                                _ => "status-badge status-submitted"
                                            };
                                        }
                                        <span class="@statusClass">
                                            @app.Status
                                        </span>
                                    </td>
                                    <td>
                                        <a href="@Url.Action("Index", "ApproverApplicationDetails", new { id = app.ApplicationId })"
                                            class="btn btn-primary-action">Review</a>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="6" class="text-center">No pending applications</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="text-end mt-2">
                <a href="@Url.Action("Index", "ApproverApplications")" class="btn btn-outline-primary">
                    View All Applications <i class="bi bi-arrow-right"></i>
                </a>
            </div>
        </div>
    </div>
</div>
