@model ApproverApplicationDetailsViewModel
@{
    ViewData["Title"] = "Approval Flow";
    ViewBag.IdParamName = "id";
    ViewBag.LoanID = Model.LoanID;
    ViewBag.Status = Model.ApplicationStatus;
    ViewBag.TabArea = "";
}
@section Styles {
    <link rel="stylesheet" href="~/css/LoanApplicationDetails.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/MyApplication.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/ApproverApprovalFlow.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/ApproverApplicationDetails.css" asp-append-version="true" />
}

<div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center mb-4">
    <div>
        <h2 class="fw-bold mb-1">Approval Flow</h2>
        <div class="text-muted mb-2" style="font-size:1em;">Current approval sequence for this application</div>
    </div>
</div>

@await Html.PartialAsync("_LoanApplicationTabs")

<div class="row">
    <div class="col-md-8">
        <div class="form-section">
            <div class="fw-bold mb-3" style="font-size: 1.2em;">Application Approval Sequence</div>
            @if (Model.Approvers != null && Model.Approvers.Any())
            {
                @foreach (var approver in Model.Approvers.OrderBy(a => a.Order))
                {
                    var isBenefitsAssistant = approver.RoleName == "Benefits Assistant";
                    var isApproved = approver.Status == "Approved" || (isBenefitsAssistant && approver.Status == "Reviewed");
                    var isRejected = approver.Status == "Rejected";
                    var isPending = !isApproved && !isRejected;

                    <div class="approval-card mb-3" style="background: #fff; border-radius: 8px; box-shadow: 0 2px 8px #0001; padding: 1.5rem;">
                        <div class="approval-card-title d-flex align-items-center mb-1" style="font-size:1.25em;">
                            @if (isApproved)
                            {
                                <span class="status-dot approved">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="white" viewBox="0 0 16 16">
                                        <path d="M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z"/>
                                    </svg>
                                </span>
                            }
                            else if (isRejected)
                            {
                                <span class="status-dot rejected">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="white" viewBox="0 0 16 16">
                                        <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
                                    </svg>
                                </span>
                            }
                            else
                            {
                                <span class="status-dot pending">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="#6c757d" viewBox="0 0 16 16">
                                        <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
                                        <path d="M8 4v4l2 2"/>
                                    </svg>
                                </span>
                            }
                            <span>@approver.RoleName</span>
                        </div>
                        <div class="approval-card-subtitle mb-2" style="color: #888;">
                            @if (isBenefitsAssistant)
                            {
                                @(approver.Description == "Waiting for approvers" ? "Application reviewed" : approver.Description)
                            }
                            else
                            {
                                @approver.Description
                            }
                        </div>
                        <div class="approval-card-content">
                            <div><strong>User:</strong> <span style="color:#218838">@approver.UserName</span></div>
                            @if (!isBenefitsAssistant)
                            {
                                <div><strong>Order:</strong> <span style="color:#218838">@approver.Order</span></div>
                            }
                            <div><strong>Department:</strong> <span style="color:#218838">@(isBenefitsAssistant ? "Benefits Assistant" : approver.RoleName)</span></div>
                        </div>
                        @{
                            // Only show documents for this approver
                            var approverDocs = Model.ApproverDocuments?.Where(d => d.LoanApprovalID == approver.LoanApprovalID).ToList();
                        }
                        @if (approverDocs != null && approverDocs.Any())
                        {
                            <div class="mt-3">
                                <div class="fw-bold mb-2" style="font-size:1.05em;">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="#d63384" viewBox="0 0 24 24" style="vertical-align:middle;margin-right:0.5em;">
                                        <path d="M6 2a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8.828A2 2 0 0 0 19.414 7.414l-4.828-4.828A2 2 0 0 0 12.172 2H6zm6 1.414L18.586 10H14a2 2 0 0 1-2-2V3.414zM6 4h6v4a4 4 0 0 0 4 4h4v8a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V4z"/>
                                    </svg>
                                    Attached Documents
                                </div>
                                <div class="list-group list-group-flush">
                                    @foreach (var doc in approverDocs)
                                    {
                                        <a href="javascript:void(0);" class="list-group-item list-group-item-action d-flex align-items-center gap-2"
                                           onclick="openPdfPreview('@Url.Action("DownloadDocument", "ApproverApplicationDetails", new { id = doc.LoanDocumentID })', '@doc.Name')"
                                           style="border-radius:6px; transition: background 0.2s;">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#e63946" viewBox="0 0 24 24">
                                                <path d="M6 2a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8.828A2 2 0 0 0 19.414 7.414l-4.828-4.828A2 2 0 0 0 12.172 2H6zm6 1.414L18.586 10H14a2 2 0 0 1-2-2V3.414z"/>
                                            </svg>
                                            <span class="text-primary text-break">@doc.Name</span>
                                        </a>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                }
            }
            else
            {
                <div class="alert alert-info">
                    No approvers have been assigned to this application yet.
                </div>
            }
        </div>
    </div>

    <div class="col-md-4">
        @await Html.PartialAsync("_ApplicationDecisionAndChecklist")
    </div>
</div>

<!-- PDF Preview Modal -->
<div id="pdfPreviewModal" class="modal-backdrop-custom" style="display:none;">
    <div class="modal-content-custom" style="max-width:900px;width:90vw;height:90vh;display:flex;flex-direction:column;">
        <div class="modal-header-custom" style="flex:0 0 auto;">
            <span id="pdfPreviewTitle" style="font-weight:bold;"></span>
            <button type="button" class="btn-cancel" style="float:right;" onclick="closePdfPreview()">×</button>
        </div>
        <div class="modal-body-custom" style="flex:1 1 auto;overflow:auto;">
            <iframe id="pdfPreviewFrame" src="" style="width:100%;height:75vh;border:none;"></iframe>
        </div>
    </div>
</div>

<!-- Hidden fields for JavaScript -->
<input type="hidden" id="loanIdField" value="@Model.LoanID" />
<input type="hidden" id="rejectUrlField" value="@Url.Action("RejectApplication", "ApproverApplicationDetails")" />
<input type="hidden" id="forwardUrlField" value="@Url.Action("ForwardApplication", "ApproverApplicationDetails")" />
@Html.AntiForgeryToken()

<!-- PDF Preview Modal -->
<div id="pdfPreviewModal" class="modal-backdrop-custom" style="display:none;">
    <div class="modal-content-custom" style="max-width:900px;width:90vw;height:90vh;display:flex;flex-direction:column;">
        <div class="modal-header-custom" style="flex:0 0 auto;">
            <span id="pdfPreviewTitle" style="font-weight:bold;"></span>
            <button type="button" class="btn-cancel" style="float:right;" onclick="closePdfPreview()">×</button>
        </div>
        <div class="modal-body-custom" style="flex:1 1 auto;overflow:auto;">
            <iframe id="pdfPreviewFrame" src="" style="width:100%;height:75vh;border:none;"></iframe>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/ApproverApprovalFlow.js" asp-append-version="true"></script>
    <script src="~/js/ApproverApplicationDetails.js" asp-append-version="true"></script>
    
    <script>
        // Initialize loan ID and URLs for the application decision functionality
        document.addEventListener('DOMContentLoaded', function() {
            if (document.getElementById('loanIdField')) {
                document.getElementById('loanIdField').value = @Model.LoanID;
            }
            if (document.getElementById('rejectUrlField')) {
                document.getElementById('rejectUrlField').value = '@Url.Action("RejectApplication", "ApproverApplicationDetails")';
            }
        });
        
        // Simple read-only functionality for PDF preview
        function openPdfPreview(url, title) {
            const modal = document.getElementById('pdfPreviewModal');
            const frame = document.getElementById('pdfPreviewFrame');
            const titleElement = document.getElementById('pdfPreviewTitle');
            
            titleElement.textContent = title || 'Document Preview';
            frame.src = url;
            modal.style.display = 'block';
            document.body.style.overflow = 'hidden';
            
            setTimeout(() => {
                modal.classList.add('show');
            }, 10);
        }

        function closePdfPreview() {
            const modal = document.getElementById('pdfPreviewModal');
            modal.classList.remove('show');
            
            setTimeout(() => {
                modal.style.display = 'none';
                document.body.style.overflow = '';
                document.getElementById('pdfPreviewFrame').src = '';
            }, 300);
        }
    </script>
}
